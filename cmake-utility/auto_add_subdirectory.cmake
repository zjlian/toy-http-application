# 检查目录下是否存在 CMakeLists.txt 文件
macro(check_has_cmakelists INPUT_TARGET_DIR OUTPUT_RESULT)
    set(${OUTPUT_RESULT} false)
    if(IS_DIRECTORY ${INPUT_TARGET_DIR})
        if (EXISTS "${INPUT_TARGET_DIR}/CMakeLists.txt")
        set(${OUTPUT_RESULT} true)
        endif()
    else()
        message(FATAL_ERROR "[check_has_cmakelists] 无效参数, INPUT_TARGET_DIR 不是一个目录 '${INPUT_TARGET_DIR}'")
    endif()
endmacro()

# 对指定目录下的全部 cmake 项目调用 add_subdirectory()
macro(auto_add_subdirectory INPUT_TARGET_DIR)
    message(STATUS "[auto_add_subdirectory] 搜索目录 ${CMAKE_CURRENT_SOURCE_DIR}/${INPUT_TARGET_DIR}")
    file(GLOB children ${CMAKE_CURRENT_SOURCE_DIR}/${INPUT_TARGET_DIR}/*)
    foreach(child ${children})
        set(is_cmake_project false)
        check_has_cmakelists(${child} is_cmake_project)
        if(${is_cmake_project})
            message(STATUS "[auto_add_subdirectory] 添加 cmake 子目录: ${child}")
            file(RELATIVE_PATH build_dir "${CMAKE_BINARY_DIR}" "${child}")
            message(STATUS "[auto_add_subdirectory] 子目录编译目录: ${CMAKE_CURRENT_SOURCE_DIR}/build/_subs/_/${build_dir}")
            add_subdirectory(${child} ${CMAKE_CURRENT_SOURCE_DIR}/build/_subs/_/${build_dir})
        endif()
    endforeach()
endmacro()
